# DESCRIPTION: 	
# Builds, tests, and packages the solution for all PR requests.	

name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:-r)
trigger: none

variables:
- template: ci-variables.yml
- template: build-variables.yml

stages:
- stage: BuildUnitTests
  displayName: 'Build and run unit tests'
  dependsOn: []
  jobs:
  - job: Windows
    pool:
      vmImage: $(WindowsVmImage)
    steps:
    - template: ./jobs/build.yml

  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: ./jobs/build.yml
      parameters:
        packageArtifacts: false

- stage: DockerBuild  
  displayName: 'Build images'
  dependsOn: []
  jobs:
  - template: ./jobs/docker-build-all.yml
    parameters: 
      tag: $(ImageTag)

- stage: redeployStu3
  displayName: 'Redeploy STU3 Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: Stu3
      webAppName: $(DeploymentEnvironmentName)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: redeployStu3Sql
  displayName: 'Redeploy STU3 SQL Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: Stu3
      webAppName: $(DeploymentEnvironmentNameSql)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: aadTestEnvironment
  displayName: Setup AAD Test Environment
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/add-aad-test-environment.yml

- stage: deployStu3
  displayName: 'Deploy STU3 Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/provision-deploy.yml
    parameters: 
      version: Stu3
      webAppName: $(DeploymentEnvironmentName)
      appServicePlanName: $(appServicePlanName)
      appServicePlanResourceGroup: $(appServicePlanResourceGroup)
      subscription: $(ConnectedServiceName)
      resourceGroup: $(DeploymentEnvironmentName)
      testEnvironmentUrl: $(TestEnvironmentUrl)
      imageTag: $(ImageTag)

- stage: deployStu3Sql
  displayName: 'Deploy STU3 SQL Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/provision-deploy.yml
    parameters: 
      version: Stu3
      sql: true
      webAppName: $(DeploymentEnvironmentNameSql)
      appServicePlanName: $(appServicePlanName)
      appServicePlanResourceGroup: $(appServicePlanResourceGroup)
      subscription: $(ConnectedServiceName)
      resourceGroup: $(DeploymentEnvironmentName)
      testEnvironmentUrl: $(TestEnvironmentUrl)
      imageTag: $(ImageTag)

- stage: deployR4
  displayName: 'Deploy R4 Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/provision-deploy.yml
    parameters: 
      version: R4
      webAppName: $(DeploymentEnvironmentNameR4)
      appServicePlanName: $(appServicePlanName)
      appServicePlanResourceGroup: $(appServicePlanResourceGroup)
      subscription: $(ConnectedServiceName)
      resourceGroup: $(DeploymentEnvironmentName)
      testEnvironmentUrl: $(TestEnvironmentUrl)
      imageTag: $(ImageTag)

- stage: deployR4Sql
  displayName: 'Deploy R4 SQL Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/provision-deploy.yml
    parameters: 
      version: R4
      sql: true
      webAppName: $(DeploymentEnvironmentNameR4Sql)
      appServicePlanName: $(appServicePlanName)
      appServicePlanResourceGroup: $(appServicePlanResourceGroup)
      subscription: $(ConnectedServiceName)
      resourceGroup: $(DeploymentEnvironmentName)
      testEnvironmentUrl: $(TestEnvironmentUrl)
      imageTag: $(ImageTag)

- stage: deployR5
  displayName: 'Deploy R5 Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/provision-deploy.yml
    parameters: 
      version: R5
      webAppName: $(DeploymentEnvironmentNameR5)
      appServicePlanName: $(appServicePlanName)
      appServicePlanResourceGroup: $(appServicePlanResourceGroup)
      subscription: $(ConnectedServiceName)
      resourceGroup: $(DeploymentEnvironmentName)
      testEnvironmentUrl: $(TestEnvironmentUrl)
      imageTag: $(ImageTag)

- stage: deployR5Sql
  displayName: 'Deploy R5 SQL Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/provision-deploy.yml
    parameters: 
      version: R5
      sql: true
      webAppName: $(DeploymentEnvironmentNameR5Sql)
      appServicePlanName: $(appServicePlanName)
      appServicePlanResourceGroup: $(appServicePlanResourceGroup)
      subscription: $(ConnectedServiceName)
      resourceGroup: $(DeploymentEnvironmentName)
      testEnvironmentUrl: $(TestEnvironmentUrl)
      imageTag: $(ImageTag)

- stage: testStu3
  displayName: 'Run Stu3 Tests'
  dependsOn:
  - BuildUnitTests
  - deployStu3
  - deployStu3Sql
  jobs:
  - template: ./jobs/run-tests.yml
    parameters:
      version: Stu3
      keyVaultName: $(DeploymentEnvironmentName)

- stage: testR4
  displayName: 'Run R4 Tests'
  dependsOn:
  - BuildUnitTests
  - deployR4
  - deployR4Sql
  jobs:
  - template: ./jobs/run-tests.yml
    parameters:
      version: R4
      keyVaultName: $(DeploymentEnvironmentNameR4)

- stage: testR5
  displayName: 'Run R5 Tests'
  dependsOn:
  - BuildUnitTests
  - deployR5
  - deployR5Sql
  jobs:
  - template: ./jobs/run-tests.yml
    parameters:
      version: R5
      keyVaultName: $(DeploymentEnvironmentNameR5)

- stage: securityScan
  displayName: Security Scan
  dependsOn: []
  jobs:
  - job: runScan
    pool:
      vmImage: $(WindowsVmImage)
    steps:
    - task: securedevelopmentteam.vss-secure-development-tools.build-task-antimalware.AntiMalware@3
      displayName: 'Run MpCmdRun.exe'
      inputs:
        FileDirPath: '$(System.ArtifactsDirectory)'
        EnableServices: true
        SignatureFreshness: OneDay
        TreatStaleSignatureAs: Warning


parameters:
- name: version
  type: string
- name: sql
  type: boolean
  default: false
- name: deploymentEnvironmentName
  type: string
- name: subscription
  type: string
- name: clusterName
  type: string
- name: clusterResourceGroup
  type: string
- name: clusterLocation
  type: string
- name: testEnvironmentUrl
  type: string
- name: imageTag
  type: string
- name: dnsSuffix
  type: string

jobs:
- job: provisionServiceWithHelm
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: AzureKeyVault@1
    displayName: 'Azure Key Vault: resolute-oss-tenant-info'
    inputs:
      azureSubscription: $(ConnectedServiceName)
      KeyVaultName: 'resolute-oss-tenant-info'

  - task: AzureCLI@2
    displayName: 'Azure CLI: InlineScript'
    inputs:
      azureSubscription: $(ConnectedServiceName)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az aks get-credentials --name ${{parameters.clusterName}} --resource-group ${{parameters.clusterResourceGroup}}

        helmChartPath="$(System.DefaultWorkingDirectory)/samples/kubernetes/helm/fhir-server/"
        repositoryName=`echo $(azureContainerRegistry)/${{parameters.version}}_fhir-server | tr '[:upper:]' '[:lower:]'`
        if [ "{{parameters.sql}}" == "true" ]; then
          dataStore="SqlServer"
        else
          dataStore="CosmosDb"
        fi
        releaseName=`echo "${{parameters.deploymentEnvironmentName}}-${{parameters.version}}-${dataStore}" | tr '[:upper:]' '[:lower:]'`
        hostName=`echo "${releaseName}.${{parameters.dnsSuffix}}" | tr '[:upper:]' '[:lower:]'`
        tenantId="$(tenant-id)"
        
        cat <<EOF > release-values.yaml
        image:
          repository: $repositoryName
          tag: ${{parameters.imageTag}}
        resources:
          requests:
            cpu: 500m
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: letsencrypt
          hosts:
            - host: $hostName
              paths:
                  - /
          tls:
            - secretName: $releaseName-tls
              hosts:
                - $hostName
        database:
          dataStore: $dataStore
          resourceGroup: ${{parameters.clusterResourceGroup}}
          location: ${{parameters.clusterLocation}}
        security:
          enabled: true
          enableAadSmartOnFhirProxy: false
          authority: https://login.microsoftonline.com/${tenantId}
          audience: ${{ parameters.testEnvironmentUrl }}
        EOF

        # Debug output of release values
        cat release-values.yaml

        helm upgrade --install $releaseName $helmChartPath \
          -f release-values.yaml \
          --wait --timeout 10m

        helm list
        kubectl get svc "$releaseName-fhir-server"

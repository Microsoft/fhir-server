//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Health.Fhir.SqlServer.Features.Schema.Model
{
    using Microsoft.Health.SqlServer.Features.Client;
    using Microsoft.Health.SqlServer.Features.Schema.Model;

    internal class CompartmentAssignmentTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<CompartmentAssignmentTableTypeV1Row>
    {
        internal CompartmentAssignmentTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.CompartmentAssignmentTableType_1")
        {
        }

        internal readonly TinyIntColumn CompartmentTypeId = new TinyIntColumn("CompartmentTypeId");
        internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { CompartmentTypeId, ReferenceResourceId };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, CompartmentAssignmentTableTypeV1Row rowData)
        {
            CompartmentTypeId.Set(record, 0, rowData.CompartmentTypeId);
            ReferenceResourceId.Set(record, 1, rowData.ReferenceResourceId);
        }
    }

    internal struct CompartmentAssignmentTableTypeV1Row
    {
        internal CompartmentAssignmentTableTypeV1Row(System.Byte CompartmentTypeId, System.String ReferenceResourceId)
        {
            this.CompartmentTypeId = CompartmentTypeId;
            this.ReferenceResourceId = ReferenceResourceId;
        }

        internal System.Byte CompartmentTypeId { get; }
        internal System.String ReferenceResourceId { get; }
    }

    internal class DateTimeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<DateTimeSearchParamTableTypeV1Row>
    {
        internal DateTimeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.DateTimeSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly DateTimeOffsetColumn StartDateTime = new DateTimeOffsetColumn("StartDateTime", 7);
        internal readonly DateTimeOffsetColumn EndDateTime = new DateTimeOffsetColumn("EndDateTime", 7);
        internal readonly BitColumn IsLongerThanADay = new BitColumn("IsLongerThanADay");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, StartDateTime, EndDateTime, IsLongerThanADay };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, DateTimeSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            StartDateTime.Set(record, 1, rowData.StartDateTime);
            EndDateTime.Set(record, 2, rowData.EndDateTime);
            IsLongerThanADay.Set(record, 3, rowData.IsLongerThanADay);
        }
    }

    internal struct DateTimeSearchParamTableTypeV1Row
    {
        internal DateTimeSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.DateTimeOffset StartDateTime, System.DateTimeOffset EndDateTime, System.Boolean IsLongerThanADay)
        {
            this.SearchParamId = SearchParamId;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
            this.IsLongerThanADay = IsLongerThanADay;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.DateTimeOffset StartDateTime { get; }
        internal System.DateTimeOffset EndDateTime { get; }
        internal System.Boolean IsLongerThanADay { get; }
    }

    internal class NumberSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<NumberSearchParamTableTypeV1Row>
    {
        internal NumberSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.NumberSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 18, 6);
        internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 18, 6);
        internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 18, 6);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SingleValue, LowValue, HighValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, NumberSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SingleValue.Set(record, 1, rowData.SingleValue);
            LowValue.Set(record, 2, rowData.LowValue);
            HighValue.Set(record, 3, rowData.HighValue);
        }
    }

    internal struct NumberSearchParamTableTypeV1Row
    {
        internal NumberSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Decimal> SingleValue, System.Nullable<System.Decimal> LowValue, System.Nullable<System.Decimal> HighValue)
        {
            this.SearchParamId = SearchParamId;
            this.SingleValue = SingleValue;
            this.LowValue = LowValue;
            this.HighValue = HighValue;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Decimal> SingleValue { get; }
        internal System.Nullable<System.Decimal> LowValue { get; }
        internal System.Nullable<System.Decimal> HighValue { get; }
    }

    internal class QuantitySearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<QuantitySearchParamTableTypeV1Row>
    {
        internal QuantitySearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.QuantitySearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
        internal readonly NullableIntColumn QuantityCodeId = new NullableIntColumn("QuantityCodeId");
        internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 18, 6);
        internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 18, 6);
        internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 18, 6);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SystemId, QuantityCodeId, SingleValue, LowValue, HighValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, QuantitySearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SystemId.Set(record, 1, rowData.SystemId);
            QuantityCodeId.Set(record, 2, rowData.QuantityCodeId);
            SingleValue.Set(record, 3, rowData.SingleValue);
            LowValue.Set(record, 4, rowData.LowValue);
            HighValue.Set(record, 5, rowData.HighValue);
        }
    }

    internal struct QuantitySearchParamTableTypeV1Row
    {
        internal QuantitySearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId, System.Nullable<System.Int32> QuantityCodeId, System.Nullable<System.Decimal> SingleValue, System.Nullable<System.Decimal> LowValue, System.Nullable<System.Decimal> HighValue)
        {
            this.SearchParamId = SearchParamId;
            this.SystemId = SystemId;
            this.QuantityCodeId = QuantityCodeId;
            this.SingleValue = SingleValue;
            this.LowValue = LowValue;
            this.HighValue = HighValue;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId { get; }
        internal System.Nullable<System.Int32> QuantityCodeId { get; }
        internal System.Nullable<System.Decimal> SingleValue { get; }
        internal System.Nullable<System.Decimal> LowValue { get; }
        internal System.Nullable<System.Decimal> HighValue { get; }
    }

    internal class ReferenceSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<ReferenceSearchParamTableTypeV1Row>
    {
        internal ReferenceSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ReferenceSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableVarCharColumn BaseUri = new NullableVarCharColumn("BaseUri", 128, "Latin1_General_100_CS_AS");
        internal readonly SmallIntColumn ReferenceResourceTypeId = new SmallIntColumn("ReferenceResourceTypeId");
        internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ReferenceResourceVersion = new NullableIntColumn("ReferenceResourceVersion");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, BaseUri, ReferenceResourceTypeId, ReferenceResourceId, ReferenceResourceVersion };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ReferenceSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            BaseUri.Set(record, 1, rowData.BaseUri);
            ReferenceResourceTypeId.Set(record, 2, rowData.ReferenceResourceTypeId);
            ReferenceResourceId.Set(record, 3, rowData.ReferenceResourceId);
            ReferenceResourceVersion.Set(record, 4, rowData.ReferenceResourceVersion);
        }
    }

    internal struct ReferenceSearchParamTableTypeV1Row
    {
        internal ReferenceSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.String BaseUri, System.Int16 ReferenceResourceTypeId, System.String ReferenceResourceId, System.Nullable<System.Int32> ReferenceResourceVersion)
        {
            this.SearchParamId = SearchParamId;
            this.BaseUri = BaseUri;
            this.ReferenceResourceTypeId = ReferenceResourceTypeId;
            this.ReferenceResourceId = ReferenceResourceId;
            this.ReferenceResourceVersion = ReferenceResourceVersion;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.String BaseUri { get; }
        internal System.Int16 ReferenceResourceTypeId { get; }
        internal System.String ReferenceResourceId { get; }
        internal System.Nullable<System.Int32> ReferenceResourceVersion { get; }
    }

    internal class ReferenceTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<ReferenceTokenCompositeSearchParamTableTypeV1Row>
    {
        internal ReferenceTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ReferenceTokenCompositeSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableVarCharColumn BaseUri1 = new NullableVarCharColumn("BaseUri1", 128, "Latin1_General_100_CS_AS");
        internal readonly SmallIntColumn ReferenceResourceTypeId1 = new SmallIntColumn("ReferenceResourceTypeId1");
        internal readonly VarCharColumn ReferenceResourceId1 = new VarCharColumn("ReferenceResourceId1", 64, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn ReferenceResourceVersion1 = new NullableIntColumn("ReferenceResourceVersion1");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 128, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, BaseUri1, ReferenceResourceTypeId1, ReferenceResourceId1, ReferenceResourceVersion1, SystemId2, Code2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ReferenceTokenCompositeSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            BaseUri1.Set(record, 1, rowData.BaseUri1);
            ReferenceResourceTypeId1.Set(record, 2, rowData.ReferenceResourceTypeId1);
            ReferenceResourceId1.Set(record, 3, rowData.ReferenceResourceId1);
            ReferenceResourceVersion1.Set(record, 4, rowData.ReferenceResourceVersion1);
            SystemId2.Set(record, 5, rowData.SystemId2);
            Code2.Set(record, 6, rowData.Code2);
        }
    }

    internal struct ReferenceTokenCompositeSearchParamTableTypeV1Row
    {
        internal ReferenceTokenCompositeSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.String BaseUri1, System.Int16 ReferenceResourceTypeId1, System.String ReferenceResourceId1, System.Nullable<System.Int32> ReferenceResourceVersion1, System.Nullable<System.Int32> SystemId2, System.String Code2)
        {
            this.SearchParamId = SearchParamId;
            this.BaseUri1 = BaseUri1;
            this.ReferenceResourceTypeId1 = ReferenceResourceTypeId1;
            this.ReferenceResourceId1 = ReferenceResourceId1;
            this.ReferenceResourceVersion1 = ReferenceResourceVersion1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.String BaseUri1 { get; }
        internal System.Int16 ReferenceResourceTypeId1 { get; }
        internal System.String ReferenceResourceId1 { get; }
        internal System.Nullable<System.Int32> ReferenceResourceVersion1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
    }

    internal class ResourceWriteClaimTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<ResourceWriteClaimTableTypeV1Row>
    {
        internal ResourceWriteClaimTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.ResourceWriteClaimTableType_1")
        {
        }

        internal readonly TinyIntColumn ClaimTypeId = new TinyIntColumn("ClaimTypeId");
        internal readonly NVarCharColumn ClaimValue = new NVarCharColumn("ClaimValue", 128);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { ClaimTypeId, ClaimValue };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, ResourceWriteClaimTableTypeV1Row rowData)
        {
            ClaimTypeId.Set(record, 0, rowData.ClaimTypeId);
            ClaimValue.Set(record, 1, rowData.ClaimValue);
        }
    }

    internal struct ResourceWriteClaimTableTypeV1Row
    {
        internal ResourceWriteClaimTableTypeV1Row(System.Byte ClaimTypeId, System.String ClaimValue)
        {
            this.ClaimTypeId = ClaimTypeId;
            this.ClaimValue = ClaimValue;
        }

        internal System.Byte ClaimTypeId { get; }
        internal System.String ClaimValue { get; }
    }

    internal class SearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<SearchParamTableTypeV1Row>
    {
        internal SearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.SearchParamTableType_1")
        {
        }

        internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 128, "Latin1_General_100_CS_AS");
        internal readonly VarCharColumn Status = new VarCharColumn("Status", 10);
        internal readonly BitColumn IsPartiallySupported = new BitColumn("IsPartiallySupported");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { Uri, Status, IsPartiallySupported };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, SearchParamTableTypeV1Row rowData)
        {
            Uri.Set(record, 0, rowData.Uri);
            Status.Set(record, 1, rowData.Status);
            IsPartiallySupported.Set(record, 2, rowData.IsPartiallySupported);
        }
    }

    internal struct SearchParamTableTypeV1Row
    {
        internal SearchParamTableTypeV1Row(System.String Uri, System.String Status, System.Boolean IsPartiallySupported)
        {
            this.Uri = Uri;
            this.Status = Status;
            this.IsPartiallySupported = IsPartiallySupported;
        }

        internal System.String Uri { get; }
        internal System.String Status { get; }
        internal System.Boolean IsPartiallySupported { get; }
    }

    internal class StringSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<StringSearchParamTableTypeV1Row>
    {
        internal StringSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.StringSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow = new NullableNVarCharColumn("TextOverflow", -1, "Latin1_General_100_CI_AI_SC");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, Text, TextOverflow };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, StringSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            Text.Set(record, 1, rowData.Text);
            TextOverflow.Set(record, 2, rowData.TextOverflow);
        }
    }

    internal struct StringSearchParamTableTypeV1Row
    {
        internal StringSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.String Text, System.String TextOverflow)
        {
            this.SearchParamId = SearchParamId;
            this.Text = Text;
            this.TextOverflow = TextOverflow;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.String Text { get; }
        internal System.String TextOverflow { get; }
    }

    internal class TokenDateTimeCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<TokenDateTimeCompositeSearchParamTableTypeV1Row>
    {
        internal TokenDateTimeCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenDateTimeCompositeSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly DateTimeOffsetColumn StartDateTime2 = new DateTimeOffsetColumn("StartDateTime2", 7);
        internal readonly DateTimeOffsetColumn EndDateTime2 = new DateTimeOffsetColumn("EndDateTime2", 7);
        internal readonly BitColumn IsLongerThanADay2 = new BitColumn("IsLongerThanADay2");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SystemId1, Code1, StartDateTime2, EndDateTime2, IsLongerThanADay2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenDateTimeCompositeSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SystemId1.Set(record, 1, rowData.SystemId1);
            Code1.Set(record, 2, rowData.Code1);
            StartDateTime2.Set(record, 3, rowData.StartDateTime2);
            EndDateTime2.Set(record, 4, rowData.EndDateTime2);
            IsLongerThanADay2.Set(record, 5, rowData.IsLongerThanADay2);
        }
    }

    internal struct TokenDateTimeCompositeSearchParamTableTypeV1Row
    {
        internal TokenDateTimeCompositeSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.DateTimeOffset StartDateTime2, System.DateTimeOffset EndDateTime2, System.Boolean IsLongerThanADay2)
        {
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.StartDateTime2 = StartDateTime2;
            this.EndDateTime2 = EndDateTime2;
            this.IsLongerThanADay2 = IsLongerThanADay2;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.DateTimeOffset StartDateTime2 { get; }
        internal System.DateTimeOffset EndDateTime2 { get; }
        internal System.Boolean IsLongerThanADay2 { get; }
    }

    internal class TokenNumberNumberCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<TokenNumberNumberCompositeSearchParamTableTypeV1Row>
    {
        internal TokenNumberNumberCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenNumberNumberCompositeSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);
        internal readonly NullableDecimalColumn SingleValue3 = new NullableDecimalColumn("SingleValue3", 18, 6);
        internal readonly NullableDecimalColumn LowValue3 = new NullableDecimalColumn("LowValue3", 18, 6);
        internal readonly NullableDecimalColumn HighValue3 = new NullableDecimalColumn("HighValue3", 18, 6);
        internal readonly BitColumn HasRange = new BitColumn("HasRange");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SystemId1, Code1, SingleValue2, LowValue2, HighValue2, SingleValue3, LowValue3, HighValue3, HasRange };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenNumberNumberCompositeSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SystemId1.Set(record, 1, rowData.SystemId1);
            Code1.Set(record, 2, rowData.Code1);
            SingleValue2.Set(record, 3, rowData.SingleValue2);
            LowValue2.Set(record, 4, rowData.LowValue2);
            HighValue2.Set(record, 5, rowData.HighValue2);
            SingleValue3.Set(record, 6, rowData.SingleValue3);
            LowValue3.Set(record, 7, rowData.LowValue3);
            HighValue3.Set(record, 8, rowData.HighValue3);
            HasRange.Set(record, 9, rowData.HasRange);
        }
    }

    internal struct TokenNumberNumberCompositeSearchParamTableTypeV1Row
    {
        internal TokenNumberNumberCompositeSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2, System.Nullable<System.Decimal> SingleValue3, System.Nullable<System.Decimal> LowValue3, System.Nullable<System.Decimal> HighValue3, System.Boolean HasRange)
        {
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
            this.SingleValue3 = SingleValue3;
            this.LowValue3 = LowValue3;
            this.HighValue3 = HighValue3;
            this.HasRange = HasRange;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
        internal System.Nullable<System.Decimal> SingleValue3 { get; }
        internal System.Nullable<System.Decimal> LowValue3 { get; }
        internal System.Nullable<System.Decimal> HighValue3 { get; }
        internal System.Boolean HasRange { get; }
    }

    internal class TokenQuantityCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<TokenQuantityCompositeSearchParamTableTypeV1Row>
    {
        internal TokenQuantityCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenQuantityCompositeSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly NullableIntColumn QuantityCodeId2 = new NullableIntColumn("QuantityCodeId2");
        internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
        internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
        internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SystemId1, Code1, SystemId2, QuantityCodeId2, SingleValue2, LowValue2, HighValue2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenQuantityCompositeSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SystemId1.Set(record, 1, rowData.SystemId1);
            Code1.Set(record, 2, rowData.Code1);
            SystemId2.Set(record, 3, rowData.SystemId2);
            QuantityCodeId2.Set(record, 4, rowData.QuantityCodeId2);
            SingleValue2.Set(record, 5, rowData.SingleValue2);
            LowValue2.Set(record, 6, rowData.LowValue2);
            HighValue2.Set(record, 7, rowData.HighValue2);
        }
    }

    internal struct TokenQuantityCompositeSearchParamTableTypeV1Row
    {
        internal TokenQuantityCompositeSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.Nullable<System.Int32> SystemId2, System.Nullable<System.Int32> QuantityCodeId2, System.Nullable<System.Decimal> SingleValue2, System.Nullable<System.Decimal> LowValue2, System.Nullable<System.Decimal> HighValue2)
        {
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.SystemId2 = SystemId2;
            this.QuantityCodeId2 = QuantityCodeId2;
            this.SingleValue2 = SingleValue2;
            this.LowValue2 = LowValue2;
            this.HighValue2 = HighValue2;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.Nullable<System.Int32> QuantityCodeId2 { get; }
        internal System.Nullable<System.Decimal> SingleValue2 { get; }
        internal System.Nullable<System.Decimal> LowValue2 { get; }
        internal System.Nullable<System.Decimal> HighValue2 { get; }
    }

    internal class TokenSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<TokenSearchParamTableTypeV1Row>
    {
        internal TokenSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
        internal readonly VarCharColumn Code = new VarCharColumn("Code", 128, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SystemId, Code };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SystemId.Set(record, 1, rowData.SystemId);
            Code.Set(record, 2, rowData.Code);
        }
    }

    internal struct TokenSearchParamTableTypeV1Row
    {
        internal TokenSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId, System.String Code)
        {
            this.SearchParamId = SearchParamId;
            this.SystemId = SystemId;
            this.Code = Code;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId { get; }
        internal System.String Code { get; }
    }

    internal class TokenStringCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<TokenStringCompositeSearchParamTableTypeV1Row>
    {
        internal TokenStringCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenStringCompositeSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NVarCharColumn Text2 = new NVarCharColumn("Text2", 256, "Latin1_General_100_CI_AI_SC");
        internal readonly NullableNVarCharColumn TextOverflow2 = new NullableNVarCharColumn("TextOverflow2", -1, "Latin1_General_100_CI_AI_SC");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SystemId1, Code1, Text2, TextOverflow2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenStringCompositeSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SystemId1.Set(record, 1, rowData.SystemId1);
            Code1.Set(record, 2, rowData.Code1);
            Text2.Set(record, 3, rowData.Text2);
            TextOverflow2.Set(record, 4, rowData.TextOverflow2);
        }
    }

    internal struct TokenStringCompositeSearchParamTableTypeV1Row
    {
        internal TokenStringCompositeSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.String Text2, System.String TextOverflow2)
        {
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.Text2 = Text2;
            this.TextOverflow2 = TextOverflow2;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.String Text2 { get; }
        internal System.String TextOverflow2 { get; }
    }

    internal class TokenTextTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<TokenTextTableTypeV1Row>
    {
        internal TokenTextTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenTextTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 400, "Latin1_General_CI_AI");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, Text };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenTextTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            Text.Set(record, 1, rowData.Text);
        }
    }

    internal struct TokenTextTableTypeV1Row
    {
        internal TokenTextTableTypeV1Row(System.Int16 SearchParamId, System.String Text)
        {
            this.SearchParamId = SearchParamId;
            this.Text = Text;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.String Text { get; }
    }

    internal class TokenTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<TokenTokenCompositeSearchParamTableTypeV1Row>
    {
        internal TokenTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.TokenTokenCompositeSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
        internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
        internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
        internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 128, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, SystemId1, Code1, SystemId2, Code2 };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, TokenTokenCompositeSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            SystemId1.Set(record, 1, rowData.SystemId1);
            Code1.Set(record, 2, rowData.Code1);
            SystemId2.Set(record, 3, rowData.SystemId2);
            Code2.Set(record, 4, rowData.Code2);
        }
    }

    internal struct TokenTokenCompositeSearchParamTableTypeV1Row
    {
        internal TokenTokenCompositeSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.Nullable<System.Int32> SystemId1, System.String Code1, System.Nullable<System.Int32> SystemId2, System.String Code2)
        {
            this.SearchParamId = SearchParamId;
            this.SystemId1 = SystemId1;
            this.Code1 = Code1;
            this.SystemId2 = SystemId2;
            this.Code2 = Code2;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.Nullable<System.Int32> SystemId1 { get; }
        internal System.String Code1 { get; }
        internal System.Nullable<System.Int32> SystemId2 { get; }
        internal System.String Code2 { get; }
    }

    internal class UriSearchParamTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<UriSearchParamTableTypeV1Row>
    {
        internal UriSearchParamTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.UriSearchParamTableType_1")
        {
        }

        internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
        internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 256, "Latin1_General_100_CS_AS");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { SearchParamId, Uri };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, UriSearchParamTableTypeV1Row rowData)
        {
            SearchParamId.Set(record, 0, rowData.SearchParamId);
            Uri.Set(record, 1, rowData.Uri);
        }
    }

    internal struct UriSearchParamTableTypeV1Row
    {
        internal UriSearchParamTableTypeV1Row(System.Int16 SearchParamId, System.String Uri)
        {
            this.SearchParamId = SearchParamId;
            this.Uri = Uri;
        }

        internal System.Int16 SearchParamId { get; }
        internal System.String Uri { get; }
    }
}
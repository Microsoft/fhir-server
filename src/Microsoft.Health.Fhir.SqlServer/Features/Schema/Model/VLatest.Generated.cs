//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Health.Fhir.SqlServer.Features.Schema.Model
{
    using Microsoft.Health.SqlServer.Features.Client;
    using Microsoft.Health.SqlServer.Features.Schema.Model;

    internal class VLatest
    {
        internal readonly static ClaimTypeTable ClaimType = new ClaimTypeTable();
        internal readonly static CompartmentAssignmentTable CompartmentAssignment = new CompartmentAssignmentTable();
        internal readonly static CompartmentTypeTable CompartmentType = new CompartmentTypeTable();
        internal readonly static DateTimeSearchParamTable DateTimeSearchParam = new DateTimeSearchParamTable();
        internal readonly static ExportJobTable ExportJob = new ExportJobTable();
        internal readonly static NumberSearchParamTable NumberSearchParam = new NumberSearchParamTable();
        internal readonly static QuantityCodeTable QuantityCode = new QuantityCodeTable();
        internal readonly static QuantitySearchParamTable QuantitySearchParam = new QuantitySearchParamTable();
        internal readonly static ReferenceSearchParamTable ReferenceSearchParam = new ReferenceSearchParamTable();
        internal readonly static ReferenceTokenCompositeSearchParamTable ReferenceTokenCompositeSearchParam = new ReferenceTokenCompositeSearchParamTable();
        internal readonly static ResourceTable Resource = new ResourceTable();
        internal readonly static ResourceTypeTable ResourceType = new ResourceTypeTable();
        internal readonly static ResourceWriteClaimTable ResourceWriteClaim = new ResourceWriteClaimTable();
        internal readonly static SearchParamTable SearchParam = new SearchParamTable();
        internal readonly static StringSearchParamTable StringSearchParam = new StringSearchParamTable();
        internal readonly static SystemTable System = new SystemTable();
        internal readonly static TokenDateTimeCompositeSearchParamTable TokenDateTimeCompositeSearchParam = new TokenDateTimeCompositeSearchParamTable();
        internal readonly static TokenNumberNumberCompositeSearchParamTable TokenNumberNumberCompositeSearchParam = new TokenNumberNumberCompositeSearchParamTable();
        internal readonly static TokenQuantityCompositeSearchParamTable TokenQuantityCompositeSearchParam = new TokenQuantityCompositeSearchParamTable();
        internal readonly static TokenSearchParamTable TokenSearchParam = new TokenSearchParamTable();
        internal readonly static TokenStringCompositeSearchParamTable TokenStringCompositeSearchParam = new TokenStringCompositeSearchParamTable();
        internal readonly static TokenTextTable TokenText = new TokenTextTable();
        internal readonly static TokenTokenCompositeSearchParamTable TokenTokenCompositeSearchParam = new TokenTokenCompositeSearchParamTable();
        internal readonly static UriSearchParamTable UriSearchParam = new UriSearchParamTable();
        internal readonly static AcquireExportJobsProcedure AcquireExportJobs = new AcquireExportJobsProcedure();
        internal readonly static CreateExportJobProcedure CreateExportJob = new CreateExportJobProcedure();
        internal readonly static GetExportJobByHashProcedure GetExportJobByHash = new GetExportJobByHashProcedure();
        internal readonly static GetExportJobByIdProcedure GetExportJobById = new GetExportJobByIdProcedure();
        internal readonly static GetSearchParamStatusesProcedure GetSearchParamStatuses = new GetSearchParamStatusesProcedure();
        internal readonly static HardDeleteResourceProcedure HardDeleteResource = new HardDeleteResourceProcedure();
        internal readonly static ReadResourceProcedure ReadResource = new ReadResourceProcedure();
        internal readonly static UpdateExportJobProcedure UpdateExportJob = new UpdateExportJobProcedure();
        internal readonly static UpsertResourceProcedure UpsertResource = new UpsertResourceProcedure();
        internal readonly static UpsertSearchParamsProcedure UpsertSearchParams = new UpsertSearchParamsProcedure();

        internal class ClaimTypeTable : Table
        {
            internal ClaimTypeTable() : base("dbo.ClaimType")
            {
            }

            internal readonly TinyIntColumn ClaimTypeId = new TinyIntColumn("ClaimTypeId");
            internal readonly VarCharColumn Name = new VarCharColumn("Name", 128, "Latin1_General_100_CS_AS");
            internal readonly Index IXC_Claim = new Index("IXC_Claim");
        }

        internal class CompartmentAssignmentTable : Table
        {
            internal CompartmentAssignmentTable() : base("dbo.CompartmentAssignment")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly TinyIntColumn CompartmentTypeId = new TinyIntColumn("CompartmentTypeId");
            internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_CompartmentAssignment = new Index("IXC_CompartmentAssignment");
            internal readonly Index IX_CompartmentAssignment_CompartmentTypeId_ReferenceResourceId = new Index("IX_CompartmentAssignment_CompartmentTypeId_ReferenceResourceId");
        }

        internal class CompartmentTypeTable : Table
        {
            internal CompartmentTypeTable() : base("dbo.CompartmentType")
            {
            }

            internal readonly TinyIntColumn CompartmentTypeId = new TinyIntColumn("CompartmentTypeId");
            internal readonly VarCharColumn Name = new VarCharColumn("Name", 128, "Latin1_General_100_CS_AS");
            internal readonly Index IXC_CompartmentType = new Index("IXC_CompartmentType");
        }

        internal class DateTimeSearchParamTable : Table
        {
            internal DateTimeSearchParamTable() : base("dbo.DateTimeSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly DateTime2Column StartDateTime = new DateTime2Column("StartDateTime", 7);
            internal readonly DateTime2Column EndDateTime = new DateTime2Column("EndDateTime", 7);
            internal readonly BitColumn IsLongerThanADay = new BitColumn("IsLongerThanADay");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_DateTimeSearchParam = new Index("IXC_DateTimeSearchParam");
            internal readonly Index IX_DateTimeSearchParam_SearchParamId_StartDateTime_EndDateTime = new Index("IX_DateTimeSearchParam_SearchParamId_StartDateTime_EndDateTime");
            internal readonly Index IX_DateTimeSearchParam_SearchParamId_EndDateTime_StartDateTime = new Index("IX_DateTimeSearchParam_SearchParamId_EndDateTime_StartDateTime");
            internal readonly Index IX_DateTimeSearchParam_SearchParamId_StartDateTime_EndDateTime_Long = new Index("IX_DateTimeSearchParam_SearchParamId_StartDateTime_EndDateTime_Long");
            internal readonly Index IX_DateTimeSearchParam_SearchParamId_EndDateTime_StartDateTime_Long = new Index("IX_DateTimeSearchParam_SearchParamId_EndDateTime_StartDateTime_Long");
        }

        internal class ExportJobTable : Table
        {
            internal ExportJobTable() : base("dbo.ExportJob")
            {
            }

            internal readonly VarCharColumn Id = new VarCharColumn("Id", 64, "Latin1_General_100_CS_AS");
            internal readonly VarCharColumn Hash = new VarCharColumn("Hash", 64, "Latin1_General_100_CS_AS");
            internal readonly VarCharColumn Status = new VarCharColumn("Status", 10);
            internal readonly NullableDateTime2Column HeartbeatDateTime = new NullableDateTime2Column("HeartbeatDateTime", 7);
            internal readonly VarCharColumn RawJobRecord = new VarCharColumn("RawJobRecord", -1);
            internal readonly TimestampColumn JobVersion = new TimestampColumn("JobVersion");
            internal readonly Index IXC_ExportJob = new Index("IXC_ExportJob");
            internal readonly Index IX_ExportJob_Hash_Status_HeartbeatDateTime = new Index("IX_ExportJob_Hash_Status_HeartbeatDateTime");
        }

        internal class NumberSearchParamTable : Table
        {
            internal NumberSearchParamTable() : base("dbo.NumberSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 18, 6);
            internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 18, 6);
            internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 18, 6);
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_NumberSearchParam = new Index("IXC_NumberSearchParam");
            internal readonly Index IX_NumberSearchParam_SearchParamId_SingleValue = new Index("IX_NumberSearchParam_SearchParamId_SingleValue");
            internal readonly Index IX_NumberSearchParam_SearchParamId_LowValue_HighValue = new Index("IX_NumberSearchParam_SearchParamId_LowValue_HighValue");
            internal readonly Index IX_NumberSearchParam_SearchParamId_HighValue_LowValue = new Index("IX_NumberSearchParam_SearchParamId_HighValue_LowValue");
        }

        internal class QuantityCodeTable : Table
        {
            internal QuantityCodeTable() : base("dbo.QuantityCode")
            {
            }

            internal readonly IntColumn QuantityCodeId = new IntColumn("QuantityCodeId");
            internal readonly NVarCharColumn Value = new NVarCharColumn("Value", 256, "Latin1_General_100_CS_AS");
            internal readonly Index IXC_QuantityCode = new Index("IXC_QuantityCode");
        }

        internal class QuantitySearchParamTable : Table
        {
            internal QuantitySearchParamTable() : base("dbo.QuantitySearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
            internal readonly NullableIntColumn QuantityCodeId = new NullableIntColumn("QuantityCodeId");
            internal readonly NullableDecimalColumn SingleValue = new NullableDecimalColumn("SingleValue", 18, 6);
            internal readonly NullableDecimalColumn LowValue = new NullableDecimalColumn("LowValue", 18, 6);
            internal readonly NullableDecimalColumn HighValue = new NullableDecimalColumn("HighValue", 18, 6);
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_QuantitySearchParam = new Index("IXC_QuantitySearchParam");
            internal readonly Index IX_QuantitySearchParam_SearchParamId_QuantityCodeId_SingleValue = new Index("IX_QuantitySearchParam_SearchParamId_QuantityCodeId_SingleValue");
            internal readonly Index IX_QuantitySearchParam_SearchParamId_QuantityCodeId_LowValue_HighValue = new Index("IX_QuantitySearchParam_SearchParamId_QuantityCodeId_LowValue_HighValue");
            internal readonly Index IX_QuantitySearchParam_SearchParamId_QuantityCodeId_HighValue_LowValue = new Index("IX_QuantitySearchParam_SearchParamId_QuantityCodeId_HighValue_LowValue");
        }

        internal class ReferenceSearchParamTable : Table
        {
            internal ReferenceSearchParamTable() : base("dbo.ReferenceSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableVarCharColumn BaseUri = new NullableVarCharColumn("BaseUri", 128, "Latin1_General_100_CS_AS");
            internal readonly SmallIntColumn ReferenceResourceTypeId = new SmallIntColumn("ReferenceResourceTypeId");
            internal readonly VarCharColumn ReferenceResourceId = new VarCharColumn("ReferenceResourceId", 64, "Latin1_General_100_CS_AS");
            internal readonly NullableIntColumn ReferenceResourceVersion = new NullableIntColumn("ReferenceResourceVersion");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_ReferenceSearchParam = new Index("IXC_ReferenceSearchParam");
            internal readonly Index IX_ReferenceSearchParam_SearchParamId_ReferenceResourceTypeId_ReferenceResourceId_BaseUri_ReferenceResourceVersion = new Index("IX_ReferenceSearchParam_SearchParamId_ReferenceResourceTypeId_ReferenceResourceId_BaseUri_ReferenceResourceVersion");
        }

        internal class ReferenceTokenCompositeSearchParamTable : Table
        {
            internal ReferenceTokenCompositeSearchParamTable() : base("dbo.ReferenceTokenCompositeSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableVarCharColumn BaseUri1 = new NullableVarCharColumn("BaseUri1", 128, "Latin1_General_100_CS_AS");
            internal readonly SmallIntColumn ReferenceResourceTypeId1 = new SmallIntColumn("ReferenceResourceTypeId1");
            internal readonly VarCharColumn ReferenceResourceId1 = new VarCharColumn("ReferenceResourceId1", 64, "Latin1_General_100_CS_AS");
            internal readonly NullableIntColumn ReferenceResourceVersion1 = new NullableIntColumn("ReferenceResourceVersion1");
            internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
            internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 128, "Latin1_General_100_CS_AS");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_ReferenceTokenCompositeSearchParam = new Index("IXC_ReferenceTokenCompositeSearchParam");
            internal readonly Index IX_ReferenceTokenCompositeSearchParam_ReferenceResourceId1_Code2 = new Index("IX_ReferenceTokenCompositeSearchParam_ReferenceResourceId1_Code2");
        }

        internal class ResourceTable : Table
        {
            internal ResourceTable() : base("dbo.Resource")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly VarCharColumn ResourceId = new VarCharColumn("ResourceId", 64, "Latin1_General_100_CS_AS");
            internal readonly IntColumn Version = new IntColumn("Version");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly BitColumn IsDeleted = new BitColumn("IsDeleted");
            internal readonly NullableVarCharColumn RequestMethod = new NullableVarCharColumn("RequestMethod", 10);
            internal readonly VarBinaryColumn RawResource = new VarBinaryColumn("RawResource", -1);
            internal readonly BitColumn IsRawResourceMetaSet = new BitColumn("IsRawResourceMetaSet");
            internal readonly Index IXC_Resource = new Index("IXC_Resource");
            internal readonly Index IX_Resource_ResourceTypeId_ResourceId_Version = new Index("IX_Resource_ResourceTypeId_ResourceId_Version");
            internal readonly Index IX_Resource_ResourceTypeId_ResourceId = new Index("IX_Resource_ResourceTypeId_ResourceId");
            internal readonly Index IX_Resource_ResourceTypeId_ResourceSurrgateId = new Index("IX_Resource_ResourceTypeId_ResourceSurrgateId");
        }

        internal class ResourceTypeTable : Table
        {
            internal ResourceTypeTable() : base("dbo.ResourceType")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly NVarCharColumn Name = new NVarCharColumn("Name", 50, "Latin1_General_100_CS_AS");
            internal readonly Index IXC_ResourceType = new Index("IXC_ResourceType");
        }

        internal class ResourceWriteClaimTable : Table
        {
            internal ResourceWriteClaimTable() : base("dbo.ResourceWriteClaim")
            {
            }

            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly TinyIntColumn ClaimTypeId = new TinyIntColumn("ClaimTypeId");
            internal readonly NVarCharColumn ClaimValue = new NVarCharColumn("ClaimValue", 128);
            internal readonly Index IXC_ResourceWriteClaim = new Index("IXC_ResourceWriteClaim");
        }

        internal class SearchParamTable : Table
        {
            internal SearchParamTable() : base("dbo.SearchParam")
            {
            }

            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 128, "Latin1_General_100_CS_AS");
            internal readonly NullableVarCharColumn Status = new NullableVarCharColumn("Status", 10);
            internal readonly NullableDateTimeOffsetColumn LastUpdated = new NullableDateTimeOffsetColumn("LastUpdated", 7);
            internal readonly NullableBitColumn IsPartiallySupported = new NullableBitColumn("IsPartiallySupported");
            internal readonly Index IXC_SearchParam = new Index("IXC_SearchParam");
        }

        internal class StringSearchParamTable : Table
        {
            internal StringSearchParamTable() : base("dbo.StringSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 256, "Latin1_General_100_CI_AI_SC");
            internal readonly NullableNVarCharColumn TextOverflow = new NullableNVarCharColumn("TextOverflow", -1, "Latin1_General_100_CI_AI_SC");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_StringSearchParam = new Index("IXC_StringSearchParam");
            internal readonly Index IX_StringSearchParam_SearchParamId_Text = new Index("IX_StringSearchParam_SearchParamId_Text");
            internal readonly Index IX_StringSearchParam_SearchParamId_TextWithOverflow = new Index("IX_StringSearchParam_SearchParamId_TextWithOverflow");
        }

        internal class SystemTable : Table
        {
            internal SystemTable() : base("dbo.System")
            {
            }

            internal readonly IntColumn SystemId = new IntColumn("SystemId");
            internal readonly NVarCharColumn Value = new NVarCharColumn("Value", 256);
            internal readonly Index IXC_System = new Index("IXC_System");
        }

        internal class TokenDateTimeCompositeSearchParamTable : Table
        {
            internal TokenDateTimeCompositeSearchParamTable() : base("dbo.TokenDateTimeCompositeSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
            internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
            internal readonly DateTime2Column StartDateTime2 = new DateTime2Column("StartDateTime2", 7);
            internal readonly DateTime2Column EndDateTime2 = new DateTime2Column("EndDateTime2", 7);
            internal readonly BitColumn IsLongerThanADay2 = new BitColumn("IsLongerThanADay2");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_TokenDateTimeCompositeSearchParam = new Index("IXC_TokenDateTimeCompositeSearchParam");
            internal readonly Index IX_TokenDateTimeCompositeSearchParam_Code1_StartDateTime2_EndDateTime2 = new Index("IX_TokenDateTimeCompositeSearchParam_Code1_StartDateTime2_EndDateTime2");
            internal readonly Index IX_TokenDateTimeCompositeSearchParam_Code1_EndDateTime2_StartDateTime2 = new Index("IX_TokenDateTimeCompositeSearchParam_Code1_EndDateTime2_StartDateTime2");
            internal readonly Index IX_TokenDateTimeCompositeSearchParam_Code1_StartDateTime2_EndDateTime2_Long = new Index("IX_TokenDateTimeCompositeSearchParam_Code1_StartDateTime2_EndDateTime2_Long");
            internal readonly Index IX_TokenDateTimeCompositeSearchParam_Code1_EndDateTime2_StartDateTime2_Long = new Index("IX_TokenDateTimeCompositeSearchParam_Code1_EndDateTime2_StartDateTime2_Long");
        }

        internal class TokenNumberNumberCompositeSearchParamTable : Table
        {
            internal TokenNumberNumberCompositeSearchParamTable() : base("dbo.TokenNumberNumberCompositeSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
            internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
            internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
            internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
            internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);
            internal readonly NullableDecimalColumn SingleValue3 = new NullableDecimalColumn("SingleValue3", 18, 6);
            internal readonly NullableDecimalColumn LowValue3 = new NullableDecimalColumn("LowValue3", 18, 6);
            internal readonly NullableDecimalColumn HighValue3 = new NullableDecimalColumn("HighValue3", 18, 6);
            internal readonly BitColumn HasRange = new BitColumn("HasRange");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_TokenNumberNumberCompositeSearchParam = new Index("IXC_TokenNumberNumberCompositeSearchParam");
            internal readonly Index IX_TokenNumberNumberCompositeSearchParam_SearchParamId_Code1_Text2 = new Index("IX_TokenNumberNumberCompositeSearchParam_SearchParamId_Code1_Text2");
            internal readonly Index IX_TokenNumberNumberCompositeSearchParam_SearchParamId_Code1_LowValue2_HighValue2_LowValue3_HighValue3 = new Index("IX_TokenNumberNumberCompositeSearchParam_SearchParamId_Code1_LowValue2_HighValue2_LowValue3_HighValue3");
        }

        internal class TokenQuantityCompositeSearchParamTable : Table
        {
            internal TokenQuantityCompositeSearchParamTable() : base("dbo.TokenQuantityCompositeSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
            internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
            internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
            internal readonly NullableIntColumn QuantityCodeId2 = new NullableIntColumn("QuantityCodeId2");
            internal readonly NullableDecimalColumn SingleValue2 = new NullableDecimalColumn("SingleValue2", 18, 6);
            internal readonly NullableDecimalColumn LowValue2 = new NullableDecimalColumn("LowValue2", 18, 6);
            internal readonly NullableDecimalColumn HighValue2 = new NullableDecimalColumn("HighValue2", 18, 6);
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_TokenQuantityCompositeSearchParam = new Index("IXC_TokenQuantityCompositeSearchParam");
            internal readonly Index IX_TokenQuantityCompositeSearchParam_SearchParamId_Code1_QuantityCodeId2_SingleValue2 = new Index("IX_TokenQuantityCompositeSearchParam_SearchParamId_Code1_QuantityCodeId2_SingleValue2");
            internal readonly Index IX_TokenQuantityCompositeSearchParam_SearchParamId_Code1_QuantityCodeId2_LowValue2_HighValue2 = new Index("IX_TokenQuantityCompositeSearchParam_SearchParamId_Code1_QuantityCodeId2_LowValue2_HighValue2");
            internal readonly Index IX_TokenQuantityCompositeSearchParam_SearchParamId_Code1_QuantityCodeId2_HighValue2_LowValue2 = new Index("IX_TokenQuantityCompositeSearchParam_SearchParamId_Code1_QuantityCodeId2_HighValue2_LowValue2");
        }

        internal class TokenSearchParamTable : Table
        {
            internal TokenSearchParamTable() : base("dbo.TokenSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableIntColumn SystemId = new NullableIntColumn("SystemId");
            internal readonly VarCharColumn Code = new VarCharColumn("Code", 128, "Latin1_General_100_CS_AS");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_TokenSearchParam = new Index("IXC_TokenSearchParam");
            internal readonly Index IX_TokenSeachParam_SearchParamId_Code_SystemId = new Index("IX_TokenSeachParam_SearchParamId_Code_SystemId");
        }

        internal class TokenStringCompositeSearchParamTable : Table
        {
            internal TokenStringCompositeSearchParamTable() : base("dbo.TokenStringCompositeSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
            internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
            internal readonly NVarCharColumn Text2 = new NVarCharColumn("Text2", 256, "Latin1_General_CI_AI");
            internal readonly NullableNVarCharColumn TextOverflow2 = new NullableNVarCharColumn("TextOverflow2", -1, "Latin1_General_CI_AI");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_TokenStringCompositeSearchParam = new Index("IXC_TokenStringCompositeSearchParam");
            internal readonly Index IX_TokenStringCompositeSearchParam_SearchParamId_Code1_Text2 = new Index("IX_TokenStringCompositeSearchParam_SearchParamId_Code1_Text2");
            internal readonly Index IX_TokenStringCompositeSearchParam_SearchParamId_Code1_Text2WithOverflow = new Index("IX_TokenStringCompositeSearchParam_SearchParamId_Code1_Text2WithOverflow");
        }

        internal class TokenTextTable : Table
        {
            internal TokenTextTable() : base("dbo.TokenText")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NVarCharColumn Text = new NVarCharColumn("Text", 400, "Latin1_General_CI_AI");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_TokenText = new Index("IXC_TokenText");
            internal readonly Index IX_TokenText_SearchParamId_Text = new Index("IX_TokenText_SearchParamId_Text");
        }

        internal class TokenTokenCompositeSearchParamTable : Table
        {
            internal TokenTokenCompositeSearchParamTable() : base("dbo.TokenTokenCompositeSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly NullableIntColumn SystemId1 = new NullableIntColumn("SystemId1");
            internal readonly VarCharColumn Code1 = new VarCharColumn("Code1", 128, "Latin1_General_100_CS_AS");
            internal readonly NullableIntColumn SystemId2 = new NullableIntColumn("SystemId2");
            internal readonly VarCharColumn Code2 = new VarCharColumn("Code2", 128, "Latin1_General_100_CS_AS");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_TokenTokenCompositeSearchParam = new Index("IXC_TokenTokenCompositeSearchParam");
            internal readonly Index IX_TokenTokenCompositeSearchParam_Code1_Code2 = new Index("IX_TokenTokenCompositeSearchParam_Code1_Code2");
        }

        internal class UriSearchParamTable : Table
        {
            internal UriSearchParamTable() : base("dbo.UriSearchParam")
            {
            }

            internal readonly SmallIntColumn ResourceTypeId = new SmallIntColumn("ResourceTypeId");
            internal readonly BigIntColumn ResourceSurrogateId = new BigIntColumn("ResourceSurrogateId");
            internal readonly SmallIntColumn SearchParamId = new SmallIntColumn("SearchParamId");
            internal readonly VarCharColumn Uri = new VarCharColumn("Uri", 256, "Latin1_General_100_CS_AS");
            internal readonly BitColumn IsHistory = new BitColumn("IsHistory");
            internal readonly Index IXC_UriSearchParam = new Index("IXC_UriSearchParam");
            internal readonly Index IX_UriSearchParam_SearchParamId_Uri = new Index("IX_UriSearchParam_SearchParamId_Uri");
        }

        internal class AcquireExportJobsProcedure : StoredProcedure
        {
            internal AcquireExportJobsProcedure() : base("dbo.AcquireExportJobs")
            {
            }

            private readonly ParameterDefinition<System.Int64> _jobHeartbeatTimeoutThresholdInSeconds = new ParameterDefinition<System.Int64>("@jobHeartbeatTimeoutThresholdInSeconds", global::System.Data.SqlDbType.BigInt, false);
            private readonly ParameterDefinition<System.Int32> _maximumNumberOfConcurrentJobsAllowed = new ParameterDefinition<System.Int32>("@maximumNumberOfConcurrentJobsAllowed", global::System.Data.SqlDbType.Int, false);

            public void PopulateCommand(SqlCommandWrapper command, System.Int64 jobHeartbeatTimeoutThresholdInSeconds, System.Int32 maximumNumberOfConcurrentJobsAllowed)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.AcquireExportJobs";
                _jobHeartbeatTimeoutThresholdInSeconds.AddParameter(command.Parameters, jobHeartbeatTimeoutThresholdInSeconds);
                _maximumNumberOfConcurrentJobsAllowed.AddParameter(command.Parameters, maximumNumberOfConcurrentJobsAllowed);
            }
        }

        internal class CreateExportJobProcedure : StoredProcedure
        {
            internal CreateExportJobProcedure() : base("dbo.CreateExportJob")
            {
            }

            private readonly ParameterDefinition<System.String> _id = new ParameterDefinition<System.String>("@id", global::System.Data.SqlDbType.VarChar, false, 64);
            private readonly ParameterDefinition<System.String> _hash = new ParameterDefinition<System.String>("@hash", global::System.Data.SqlDbType.VarChar, false, 64);
            private readonly ParameterDefinition<System.String> _status = new ParameterDefinition<System.String>("@status", global::System.Data.SqlDbType.VarChar, false, 10);
            private readonly ParameterDefinition<System.String> _rawJobRecord = new ParameterDefinition<System.String>("@rawJobRecord", global::System.Data.SqlDbType.VarChar, false, -1);

            public void PopulateCommand(SqlCommandWrapper command, System.String id, System.String hash, System.String status, System.String rawJobRecord)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.CreateExportJob";
                _id.AddParameter(command.Parameters, id);
                _hash.AddParameter(command.Parameters, hash);
                _status.AddParameter(command.Parameters, status);
                _rawJobRecord.AddParameter(command.Parameters, rawJobRecord);
            }
        }

        internal class GetExportJobByHashProcedure : StoredProcedure
        {
            internal GetExportJobByHashProcedure() : base("dbo.GetExportJobByHash")
            {
            }

            private readonly ParameterDefinition<System.String> _hash = new ParameterDefinition<System.String>("@hash", global::System.Data.SqlDbType.VarChar, false, 64);

            public void PopulateCommand(SqlCommandWrapper command, System.String hash)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.GetExportJobByHash";
                _hash.AddParameter(command.Parameters, hash);
            }
        }

        internal class GetExportJobByIdProcedure : StoredProcedure
        {
            internal GetExportJobByIdProcedure() : base("dbo.GetExportJobById")
            {
            }

            private readonly ParameterDefinition<System.String> _id = new ParameterDefinition<System.String>("@id", global::System.Data.SqlDbType.VarChar, false, 64);

            public void PopulateCommand(SqlCommandWrapper command, System.String id)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.GetExportJobById";
                _id.AddParameter(command.Parameters, id);
            }
        }

        internal class GetSearchParamStatusesProcedure : StoredProcedure
        {
            internal GetSearchParamStatusesProcedure() : base("dbo.GetSearchParamStatuses")
            {
            }

            public void PopulateCommand(SqlCommandWrapper command)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.GetSearchParamStatuses";
            }
        }

        internal class HardDeleteResourceProcedure : StoredProcedure
        {
            internal HardDeleteResourceProcedure() : base("dbo.HardDeleteResource")
            {
            }

            private readonly ParameterDefinition<System.Int16> _resourceTypeId = new ParameterDefinition<System.Int16>("@resourceTypeId", global::System.Data.SqlDbType.SmallInt, false);
            private readonly ParameterDefinition<System.String> _resourceId = new ParameterDefinition<System.String>("@resourceId", global::System.Data.SqlDbType.VarChar, false, 64);

            public void PopulateCommand(SqlCommandWrapper command, System.Int16 resourceTypeId, System.String resourceId)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.HardDeleteResource";
                _resourceTypeId.AddParameter(command.Parameters, resourceTypeId);
                _resourceId.AddParameter(command.Parameters, resourceId);
            }
        }

        internal class ReadResourceProcedure : StoredProcedure
        {
            internal ReadResourceProcedure() : base("dbo.ReadResource")
            {
            }

            private readonly ParameterDefinition<System.Int16> _resourceTypeId = new ParameterDefinition<System.Int16>("@resourceTypeId", global::System.Data.SqlDbType.SmallInt, false);
            private readonly ParameterDefinition<System.String> _resourceId = new ParameterDefinition<System.String>("@resourceId", global::System.Data.SqlDbType.VarChar, false, 64);
            private readonly ParameterDefinition<System.Nullable<System.Int32>> _version = new ParameterDefinition<System.Nullable<System.Int32>>("@version", global::System.Data.SqlDbType.Int, true);

            public void PopulateCommand(SqlCommandWrapper command, System.Int16 resourceTypeId, System.String resourceId, System.Nullable<System.Int32> version)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.ReadResource";
                _resourceTypeId.AddParameter(command.Parameters, resourceTypeId);
                _resourceId.AddParameter(command.Parameters, resourceId);
                _version.AddParameter(command.Parameters, version);
            }
        }

        internal class UpdateExportJobProcedure : StoredProcedure
        {
            internal UpdateExportJobProcedure() : base("dbo.UpdateExportJob")
            {
            }

            private readonly ParameterDefinition<System.String> _id = new ParameterDefinition<System.String>("@id", global::System.Data.SqlDbType.VarChar, false, 64);
            private readonly ParameterDefinition<System.String> _status = new ParameterDefinition<System.String>("@status", global::System.Data.SqlDbType.VarChar, false, 10);
            private readonly ParameterDefinition<System.String> _rawJobRecord = new ParameterDefinition<System.String>("@rawJobRecord", global::System.Data.SqlDbType.VarChar, false, -1);
            private readonly ParameterDefinition<System.Byte[]> _jobVersion = new ParameterDefinition<System.Byte[]>("@jobVersion", global::System.Data.SqlDbType.Binary, false, 8);

            public void PopulateCommand(SqlCommandWrapper command, System.String id, System.String status, System.String rawJobRecord, System.Byte[] jobVersion)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.UpdateExportJob";
                _id.AddParameter(command.Parameters, id);
                _status.AddParameter(command.Parameters, status);
                _rawJobRecord.AddParameter(command.Parameters, rawJobRecord);
                _jobVersion.AddParameter(command.Parameters, jobVersion);
            }
        }

        internal class UpsertResourceProcedure : StoredProcedure
        {
            internal UpsertResourceProcedure() : base("dbo.UpsertResource")
            {
            }

            private readonly ParameterDefinition<System.Int64> _baseResourceSurrogateId = new ParameterDefinition<System.Int64>("@baseResourceSurrogateId", global::System.Data.SqlDbType.BigInt, false);
            private readonly ParameterDefinition<System.Int16> _resourceTypeId = new ParameterDefinition<System.Int16>("@resourceTypeId", global::System.Data.SqlDbType.SmallInt, false);
            private readonly ParameterDefinition<System.String> _resourceId = new ParameterDefinition<System.String>("@resourceId", global::System.Data.SqlDbType.VarChar, false, 64);
            private readonly ParameterDefinition<System.Nullable<System.Int32>> _eTag = new ParameterDefinition<System.Nullable<System.Int32>>("@eTag", global::System.Data.SqlDbType.Int, true);
            private readonly ParameterDefinition<System.Boolean> _allowCreate = new ParameterDefinition<System.Boolean>("@allowCreate", global::System.Data.SqlDbType.Bit, false);
            private readonly ParameterDefinition<System.Boolean> _isDeleted = new ParameterDefinition<System.Boolean>("@isDeleted", global::System.Data.SqlDbType.Bit, false);
            private readonly ParameterDefinition<System.Boolean> _keepHistory = new ParameterDefinition<System.Boolean>("@keepHistory", global::System.Data.SqlDbType.Bit, false);
            private readonly ParameterDefinition<System.String> _requestMethod = new ParameterDefinition<System.String>("@requestMethod", global::System.Data.SqlDbType.VarChar, false, 10);
            private readonly ParameterDefinition<global::System.IO.Stream> _rawResource = new ParameterDefinition<global::System.IO.Stream>("@rawResource", global::System.Data.SqlDbType.VarBinary, false, -1);
            private readonly ResourceWriteClaimTableTypeV1TableValuedParameterDefinition _resourceWriteClaims = new ResourceWriteClaimTableTypeV1TableValuedParameterDefinition("@resourceWriteClaims");
            private readonly CompartmentAssignmentTableTypeV1TableValuedParameterDefinition _compartmentAssignments = new CompartmentAssignmentTableTypeV1TableValuedParameterDefinition("@compartmentAssignments");
            private readonly ReferenceSearchParamTableTypeV1TableValuedParameterDefinition _referenceSearchParams = new ReferenceSearchParamTableTypeV1TableValuedParameterDefinition("@referenceSearchParams");
            private readonly TokenSearchParamTableTypeV1TableValuedParameterDefinition _tokenSearchParams = new TokenSearchParamTableTypeV1TableValuedParameterDefinition("@tokenSearchParams");
            private readonly TokenTextTableTypeV1TableValuedParameterDefinition _tokenTextSearchParams = new TokenTextTableTypeV1TableValuedParameterDefinition("@tokenTextSearchParams");
            private readonly StringSearchParamTableTypeV1TableValuedParameterDefinition _stringSearchParams = new StringSearchParamTableTypeV1TableValuedParameterDefinition("@stringSearchParams");
            private readonly NumberSearchParamTableTypeV1TableValuedParameterDefinition _numberSearchParams = new NumberSearchParamTableTypeV1TableValuedParameterDefinition("@numberSearchParams");
            private readonly QuantitySearchParamTableTypeV1TableValuedParameterDefinition _quantitySearchParams = new QuantitySearchParamTableTypeV1TableValuedParameterDefinition("@quantitySearchParams");
            private readonly UriSearchParamTableTypeV1TableValuedParameterDefinition _uriSearchParams = new UriSearchParamTableTypeV1TableValuedParameterDefinition("@uriSearchParams");
            private readonly DateTimeSearchParamTableTypeV1TableValuedParameterDefinition _dateTimeSearchParms = new DateTimeSearchParamTableTypeV1TableValuedParameterDefinition("@dateTimeSearchParms");
            private readonly ReferenceTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition _referenceTokenCompositeSearchParams = new ReferenceTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition("@referenceTokenCompositeSearchParams");
            private readonly TokenTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition _tokenTokenCompositeSearchParams = new TokenTokenCompositeSearchParamTableTypeV1TableValuedParameterDefinition("@tokenTokenCompositeSearchParams");
            private readonly TokenDateTimeCompositeSearchParamTableTypeV1TableValuedParameterDefinition _tokenDateTimeCompositeSearchParams = new TokenDateTimeCompositeSearchParamTableTypeV1TableValuedParameterDefinition("@tokenDateTimeCompositeSearchParams");
            private readonly TokenQuantityCompositeSearchParamTableTypeV1TableValuedParameterDefinition _tokenQuantityCompositeSearchParams = new TokenQuantityCompositeSearchParamTableTypeV1TableValuedParameterDefinition("@tokenQuantityCompositeSearchParams");
            private readonly TokenStringCompositeSearchParamTableTypeV1TableValuedParameterDefinition _tokenStringCompositeSearchParams = new TokenStringCompositeSearchParamTableTypeV1TableValuedParameterDefinition("@tokenStringCompositeSearchParams");
            private readonly TokenNumberNumberCompositeSearchParamTableTypeV1TableValuedParameterDefinition _tokenNumberNumberCompositeSearchParams = new TokenNumberNumberCompositeSearchParamTableTypeV1TableValuedParameterDefinition("@tokenNumberNumberCompositeSearchParams");

            public void PopulateCommand(SqlCommandWrapper command, System.Int64 baseResourceSurrogateId, System.Int16 resourceTypeId, System.String resourceId, System.Nullable<System.Int32> eTag, System.Boolean allowCreate, System.Boolean isDeleted, System.Boolean keepHistory, System.String requestMethod, global::System.IO.Stream rawResource, global::System.Collections.Generic.IEnumerable<ResourceWriteClaimTableTypeV1Row> resourceWriteClaims, global::System.Collections.Generic.IEnumerable<CompartmentAssignmentTableTypeV1Row> compartmentAssignments, global::System.Collections.Generic.IEnumerable<ReferenceSearchParamTableTypeV1Row> referenceSearchParams, global::System.Collections.Generic.IEnumerable<TokenSearchParamTableTypeV1Row> tokenSearchParams, global::System.Collections.Generic.IEnumerable<TokenTextTableTypeV1Row> tokenTextSearchParams, global::System.Collections.Generic.IEnumerable<StringSearchParamTableTypeV1Row> stringSearchParams, global::System.Collections.Generic.IEnumerable<NumberSearchParamTableTypeV1Row> numberSearchParams, global::System.Collections.Generic.IEnumerable<QuantitySearchParamTableTypeV1Row> quantitySearchParams, global::System.Collections.Generic.IEnumerable<UriSearchParamTableTypeV1Row> uriSearchParams, global::System.Collections.Generic.IEnumerable<DateTimeSearchParamTableTypeV1Row> dateTimeSearchParms, global::System.Collections.Generic.IEnumerable<ReferenceTokenCompositeSearchParamTableTypeV1Row> referenceTokenCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenTokenCompositeSearchParamTableTypeV1Row> tokenTokenCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenDateTimeCompositeSearchParamTableTypeV1Row> tokenDateTimeCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenQuantityCompositeSearchParamTableTypeV1Row> tokenQuantityCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenStringCompositeSearchParamTableTypeV1Row> tokenStringCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenNumberNumberCompositeSearchParamTableTypeV1Row> tokenNumberNumberCompositeSearchParams)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.UpsertResource";
                _baseResourceSurrogateId.AddParameter(command.Parameters, baseResourceSurrogateId);
                _resourceTypeId.AddParameter(command.Parameters, resourceTypeId);
                _resourceId.AddParameter(command.Parameters, resourceId);
                _eTag.AddParameter(command.Parameters, eTag);
                _allowCreate.AddParameter(command.Parameters, allowCreate);
                _isDeleted.AddParameter(command.Parameters, isDeleted);
                _keepHistory.AddParameter(command.Parameters, keepHistory);
                _requestMethod.AddParameter(command.Parameters, requestMethod);
                _rawResource.AddParameter(command.Parameters, rawResource);
                _resourceWriteClaims.AddParameter(command.Parameters, resourceWriteClaims);
                _compartmentAssignments.AddParameter(command.Parameters, compartmentAssignments);
                _referenceSearchParams.AddParameter(command.Parameters, referenceSearchParams);
                _tokenSearchParams.AddParameter(command.Parameters, tokenSearchParams);
                _tokenTextSearchParams.AddParameter(command.Parameters, tokenTextSearchParams);
                _stringSearchParams.AddParameter(command.Parameters, stringSearchParams);
                _numberSearchParams.AddParameter(command.Parameters, numberSearchParams);
                _quantitySearchParams.AddParameter(command.Parameters, quantitySearchParams);
                _uriSearchParams.AddParameter(command.Parameters, uriSearchParams);
                _dateTimeSearchParms.AddParameter(command.Parameters, dateTimeSearchParms);
                _referenceTokenCompositeSearchParams.AddParameter(command.Parameters, referenceTokenCompositeSearchParams);
                _tokenTokenCompositeSearchParams.AddParameter(command.Parameters, tokenTokenCompositeSearchParams);
                _tokenDateTimeCompositeSearchParams.AddParameter(command.Parameters, tokenDateTimeCompositeSearchParams);
                _tokenQuantityCompositeSearchParams.AddParameter(command.Parameters, tokenQuantityCompositeSearchParams);
                _tokenStringCompositeSearchParams.AddParameter(command.Parameters, tokenStringCompositeSearchParams);
                _tokenNumberNumberCompositeSearchParams.AddParameter(command.Parameters, tokenNumberNumberCompositeSearchParams);
            }

            public void PopulateCommand(SqlCommandWrapper command, System.Int64 baseResourceSurrogateId, System.Int16 resourceTypeId, System.String resourceId, System.Nullable<System.Int32> eTag, System.Boolean allowCreate, System.Boolean isDeleted, System.Boolean keepHistory, System.String requestMethod, global::System.IO.Stream rawResource, UpsertResourceTableValuedParameters tableValuedParameters)
            {
                PopulateCommand(command, baseResourceSurrogateId: baseResourceSurrogateId, resourceTypeId: resourceTypeId, resourceId: resourceId, eTag: eTag, allowCreate: allowCreate, isDeleted: isDeleted, keepHistory: keepHistory, requestMethod: requestMethod, rawResource: rawResource, resourceWriteClaims: tableValuedParameters.ResourceWriteClaims, compartmentAssignments: tableValuedParameters.CompartmentAssignments, referenceSearchParams: tableValuedParameters.ReferenceSearchParams, tokenSearchParams: tableValuedParameters.TokenSearchParams, tokenTextSearchParams: tableValuedParameters.TokenTextSearchParams, stringSearchParams: tableValuedParameters.StringSearchParams, numberSearchParams: tableValuedParameters.NumberSearchParams, quantitySearchParams: tableValuedParameters.QuantitySearchParams, uriSearchParams: tableValuedParameters.UriSearchParams, dateTimeSearchParms: tableValuedParameters.DateTimeSearchParms, referenceTokenCompositeSearchParams: tableValuedParameters.ReferenceTokenCompositeSearchParams, tokenTokenCompositeSearchParams: tableValuedParameters.TokenTokenCompositeSearchParams, tokenDateTimeCompositeSearchParams: tableValuedParameters.TokenDateTimeCompositeSearchParams, tokenQuantityCompositeSearchParams: tableValuedParameters.TokenQuantityCompositeSearchParams, tokenStringCompositeSearchParams: tableValuedParameters.TokenStringCompositeSearchParams, tokenNumberNumberCompositeSearchParams: tableValuedParameters.TokenNumberNumberCompositeSearchParams);
            }
        }

        internal class UpsertResourceTvpGenerator<TInput> : IStoredProcedureTableValuedParametersGenerator<TInput, UpsertResourceTableValuedParameters>
        {
            public UpsertResourceTvpGenerator(ITableValuedParameterRowGenerator<TInput, ResourceWriteClaimTableTypeV1Row> ResourceWriteClaimTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, CompartmentAssignmentTableTypeV1Row> CompartmentAssignmentTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, ReferenceSearchParamTableTypeV1Row> ReferenceSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, TokenSearchParamTableTypeV1Row> TokenSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, TokenTextTableTypeV1Row> TokenTextTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, StringSearchParamTableTypeV1Row> StringSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, NumberSearchParamTableTypeV1Row> NumberSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, QuantitySearchParamTableTypeV1Row> QuantitySearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, UriSearchParamTableTypeV1Row> UriSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, DateTimeSearchParamTableTypeV1Row> DateTimeSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, ReferenceTokenCompositeSearchParamTableTypeV1Row> ReferenceTokenCompositeSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, TokenTokenCompositeSearchParamTableTypeV1Row> TokenTokenCompositeSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, TokenDateTimeCompositeSearchParamTableTypeV1Row> TokenDateTimeCompositeSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, TokenQuantityCompositeSearchParamTableTypeV1Row> TokenQuantityCompositeSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, TokenStringCompositeSearchParamTableTypeV1Row> TokenStringCompositeSearchParamTableTypeV1RowGenerator, ITableValuedParameterRowGenerator<TInput, TokenNumberNumberCompositeSearchParamTableTypeV1Row> TokenNumberNumberCompositeSearchParamTableTypeV1RowGenerator)
            {
                this.ResourceWriteClaimTableTypeV1RowGenerator = ResourceWriteClaimTableTypeV1RowGenerator;
                this.CompartmentAssignmentTableTypeV1RowGenerator = CompartmentAssignmentTableTypeV1RowGenerator;
                this.ReferenceSearchParamTableTypeV1RowGenerator = ReferenceSearchParamTableTypeV1RowGenerator;
                this.TokenSearchParamTableTypeV1RowGenerator = TokenSearchParamTableTypeV1RowGenerator;
                this.TokenTextTableTypeV1RowGenerator = TokenTextTableTypeV1RowGenerator;
                this.StringSearchParamTableTypeV1RowGenerator = StringSearchParamTableTypeV1RowGenerator;
                this.NumberSearchParamTableTypeV1RowGenerator = NumberSearchParamTableTypeV1RowGenerator;
                this.QuantitySearchParamTableTypeV1RowGenerator = QuantitySearchParamTableTypeV1RowGenerator;
                this.UriSearchParamTableTypeV1RowGenerator = UriSearchParamTableTypeV1RowGenerator;
                this.DateTimeSearchParamTableTypeV1RowGenerator = DateTimeSearchParamTableTypeV1RowGenerator;
                this.ReferenceTokenCompositeSearchParamTableTypeV1RowGenerator = ReferenceTokenCompositeSearchParamTableTypeV1RowGenerator;
                this.TokenTokenCompositeSearchParamTableTypeV1RowGenerator = TokenTokenCompositeSearchParamTableTypeV1RowGenerator;
                this.TokenDateTimeCompositeSearchParamTableTypeV1RowGenerator = TokenDateTimeCompositeSearchParamTableTypeV1RowGenerator;
                this.TokenQuantityCompositeSearchParamTableTypeV1RowGenerator = TokenQuantityCompositeSearchParamTableTypeV1RowGenerator;
                this.TokenStringCompositeSearchParamTableTypeV1RowGenerator = TokenStringCompositeSearchParamTableTypeV1RowGenerator;
                this.TokenNumberNumberCompositeSearchParamTableTypeV1RowGenerator = TokenNumberNumberCompositeSearchParamTableTypeV1RowGenerator;
            }

            private readonly ITableValuedParameterRowGenerator<TInput, ResourceWriteClaimTableTypeV1Row> ResourceWriteClaimTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, CompartmentAssignmentTableTypeV1Row> CompartmentAssignmentTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, ReferenceSearchParamTableTypeV1Row> ReferenceSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, TokenSearchParamTableTypeV1Row> TokenSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, TokenTextTableTypeV1Row> TokenTextTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, StringSearchParamTableTypeV1Row> StringSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, NumberSearchParamTableTypeV1Row> NumberSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, QuantitySearchParamTableTypeV1Row> QuantitySearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, UriSearchParamTableTypeV1Row> UriSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, DateTimeSearchParamTableTypeV1Row> DateTimeSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, ReferenceTokenCompositeSearchParamTableTypeV1Row> ReferenceTokenCompositeSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, TokenTokenCompositeSearchParamTableTypeV1Row> TokenTokenCompositeSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, TokenDateTimeCompositeSearchParamTableTypeV1Row> TokenDateTimeCompositeSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, TokenQuantityCompositeSearchParamTableTypeV1Row> TokenQuantityCompositeSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, TokenStringCompositeSearchParamTableTypeV1Row> TokenStringCompositeSearchParamTableTypeV1RowGenerator;
            private readonly ITableValuedParameterRowGenerator<TInput, TokenNumberNumberCompositeSearchParamTableTypeV1Row> TokenNumberNumberCompositeSearchParamTableTypeV1RowGenerator;

            public UpsertResourceTableValuedParameters Generate(TInput input)
            {
                return new UpsertResourceTableValuedParameters(ResourceWriteClaimTableTypeV1RowGenerator.GenerateRows(input), CompartmentAssignmentTableTypeV1RowGenerator.GenerateRows(input), ReferenceSearchParamTableTypeV1RowGenerator.GenerateRows(input), TokenSearchParamTableTypeV1RowGenerator.GenerateRows(input), TokenTextTableTypeV1RowGenerator.GenerateRows(input), StringSearchParamTableTypeV1RowGenerator.GenerateRows(input), NumberSearchParamTableTypeV1RowGenerator.GenerateRows(input), QuantitySearchParamTableTypeV1RowGenerator.GenerateRows(input), UriSearchParamTableTypeV1RowGenerator.GenerateRows(input), DateTimeSearchParamTableTypeV1RowGenerator.GenerateRows(input), ReferenceTokenCompositeSearchParamTableTypeV1RowGenerator.GenerateRows(input), TokenTokenCompositeSearchParamTableTypeV1RowGenerator.GenerateRows(input), TokenDateTimeCompositeSearchParamTableTypeV1RowGenerator.GenerateRows(input), TokenQuantityCompositeSearchParamTableTypeV1RowGenerator.GenerateRows(input), TokenStringCompositeSearchParamTableTypeV1RowGenerator.GenerateRows(input), TokenNumberNumberCompositeSearchParamTableTypeV1RowGenerator.GenerateRows(input));
            }
        }

        internal struct UpsertResourceTableValuedParameters
        {
            internal UpsertResourceTableValuedParameters(global::System.Collections.Generic.IEnumerable<ResourceWriteClaimTableTypeV1Row> ResourceWriteClaims, global::System.Collections.Generic.IEnumerable<CompartmentAssignmentTableTypeV1Row> CompartmentAssignments, global::System.Collections.Generic.IEnumerable<ReferenceSearchParamTableTypeV1Row> ReferenceSearchParams, global::System.Collections.Generic.IEnumerable<TokenSearchParamTableTypeV1Row> TokenSearchParams, global::System.Collections.Generic.IEnumerable<TokenTextTableTypeV1Row> TokenTextSearchParams, global::System.Collections.Generic.IEnumerable<StringSearchParamTableTypeV1Row> StringSearchParams, global::System.Collections.Generic.IEnumerable<NumberSearchParamTableTypeV1Row> NumberSearchParams, global::System.Collections.Generic.IEnumerable<QuantitySearchParamTableTypeV1Row> QuantitySearchParams, global::System.Collections.Generic.IEnumerable<UriSearchParamTableTypeV1Row> UriSearchParams, global::System.Collections.Generic.IEnumerable<DateTimeSearchParamTableTypeV1Row> DateTimeSearchParms, global::System.Collections.Generic.IEnumerable<ReferenceTokenCompositeSearchParamTableTypeV1Row> ReferenceTokenCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenTokenCompositeSearchParamTableTypeV1Row> TokenTokenCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenDateTimeCompositeSearchParamTableTypeV1Row> TokenDateTimeCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenQuantityCompositeSearchParamTableTypeV1Row> TokenQuantityCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenStringCompositeSearchParamTableTypeV1Row> TokenStringCompositeSearchParams, global::System.Collections.Generic.IEnumerable<TokenNumberNumberCompositeSearchParamTableTypeV1Row> TokenNumberNumberCompositeSearchParams)
            {
                this.ResourceWriteClaims = ResourceWriteClaims;
                this.CompartmentAssignments = CompartmentAssignments;
                this.ReferenceSearchParams = ReferenceSearchParams;
                this.TokenSearchParams = TokenSearchParams;
                this.TokenTextSearchParams = TokenTextSearchParams;
                this.StringSearchParams = StringSearchParams;
                this.NumberSearchParams = NumberSearchParams;
                this.QuantitySearchParams = QuantitySearchParams;
                this.UriSearchParams = UriSearchParams;
                this.DateTimeSearchParms = DateTimeSearchParms;
                this.ReferenceTokenCompositeSearchParams = ReferenceTokenCompositeSearchParams;
                this.TokenTokenCompositeSearchParams = TokenTokenCompositeSearchParams;
                this.TokenDateTimeCompositeSearchParams = TokenDateTimeCompositeSearchParams;
                this.TokenQuantityCompositeSearchParams = TokenQuantityCompositeSearchParams;
                this.TokenStringCompositeSearchParams = TokenStringCompositeSearchParams;
                this.TokenNumberNumberCompositeSearchParams = TokenNumberNumberCompositeSearchParams;
            }

            internal global::System.Collections.Generic.IEnumerable<ResourceWriteClaimTableTypeV1Row> ResourceWriteClaims { get; }
            internal global::System.Collections.Generic.IEnumerable<CompartmentAssignmentTableTypeV1Row> CompartmentAssignments { get; }
            internal global::System.Collections.Generic.IEnumerable<ReferenceSearchParamTableTypeV1Row> ReferenceSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<TokenSearchParamTableTypeV1Row> TokenSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<TokenTextTableTypeV1Row> TokenTextSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<StringSearchParamTableTypeV1Row> StringSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<NumberSearchParamTableTypeV1Row> NumberSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<QuantitySearchParamTableTypeV1Row> QuantitySearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<UriSearchParamTableTypeV1Row> UriSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<DateTimeSearchParamTableTypeV1Row> DateTimeSearchParms { get; }
            internal global::System.Collections.Generic.IEnumerable<ReferenceTokenCompositeSearchParamTableTypeV1Row> ReferenceTokenCompositeSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<TokenTokenCompositeSearchParamTableTypeV1Row> TokenTokenCompositeSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<TokenDateTimeCompositeSearchParamTableTypeV1Row> TokenDateTimeCompositeSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<TokenQuantityCompositeSearchParamTableTypeV1Row> TokenQuantityCompositeSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<TokenStringCompositeSearchParamTableTypeV1Row> TokenStringCompositeSearchParams { get; }
            internal global::System.Collections.Generic.IEnumerable<TokenNumberNumberCompositeSearchParamTableTypeV1Row> TokenNumberNumberCompositeSearchParams { get; }
        }

        internal class UpsertSearchParamsProcedure : StoredProcedure
        {
            internal UpsertSearchParamsProcedure() : base("dbo.UpsertSearchParams")
            {
            }

            private readonly SearchParamTableTypeV1TableValuedParameterDefinition _searchParams = new SearchParamTableTypeV1TableValuedParameterDefinition("@searchParams");

            public void PopulateCommand(SqlCommandWrapper command, global::System.Collections.Generic.IEnumerable<SearchParamTableTypeV1Row> searchParams)
            {
                command.CommandType = global::System.Data.CommandType.StoredProcedure;
                command.CommandText = "dbo.UpsertSearchParams";
                _searchParams.AddParameter(command.Parameters, searchParams);
            }

            public void PopulateCommand(SqlCommandWrapper command, UpsertSearchParamsTableValuedParameters tableValuedParameters)
            {
                PopulateCommand(command, searchParams: tableValuedParameters.SearchParams);
            }
        }

        internal class UpsertSearchParamsTvpGenerator<TInput> : IStoredProcedureTableValuedParametersGenerator<TInput, UpsertSearchParamsTableValuedParameters>
        {
            public UpsertSearchParamsTvpGenerator(ITableValuedParameterRowGenerator<TInput, SearchParamTableTypeV1Row> SearchParamTableTypeV1RowGenerator)
            {
                this.SearchParamTableTypeV1RowGenerator = SearchParamTableTypeV1RowGenerator;
            }

            private readonly ITableValuedParameterRowGenerator<TInput, SearchParamTableTypeV1Row> SearchParamTableTypeV1RowGenerator;

            public UpsertSearchParamsTableValuedParameters Generate(TInput input)
            {
                return new UpsertSearchParamsTableValuedParameters(SearchParamTableTypeV1RowGenerator.GenerateRows(input));
            }
        }

        internal struct UpsertSearchParamsTableValuedParameters
        {
            internal UpsertSearchParamsTableValuedParameters(global::System.Collections.Generic.IEnumerable<SearchParamTableTypeV1Row> SearchParams)
            {
                this.SearchParams = SearchParams;
            }

            internal global::System.Collections.Generic.IEnumerable<SearchParamTableTypeV1Row> SearchParams { get; }
        }
    }
}